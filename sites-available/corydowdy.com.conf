# Corydowdy.com Base Virutal Server

# -----------------------------------------------------------------------
#
# www to non-www redirect -- duplicate content is BAD:
# https://github.com/h5bp/html5-boilerplate/blob/5370479476dceae7cc3ea105946536d6bc0ee468/.htaccess#L362
# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
#
#------------------------------------------------------------------------
server {
  # don't forget to tell on which port this server listens
  listen 80;

  # listen on the www host
  server_name www.DOMAIN-NAME.com;

  # and redirect to the non-www host (declared below)
  return 301 $scheme://DOMAIN-NAME.com$request_uri;
}


# ----------------------------------------------------------------------- #
#                                                                         #
#        SET UP FASTCGI CACHE                                             #
#  									                                                      #
# ----------------------------------------------------------------------- #

#include fastcgi-cache.conf;


server {
  listen 80 default_server;

  # if using fastcgi-cache add this header
  #add_header X-Cache-Status $upstream_cache_status;

  # The host name to respond to
  server_name DOMAIN-NAME.com;

  # Path for static files
  root /your/path/site.com/here;

  #Specify a charset
  charset utf-8;

  index index.php;

  # naxsi_exlog
  #set $naxsi_extensive_log 1;

  # -------------------------------------------------------------------------------------#
  #                                                                                      #
  #           Security Headers                                                           #
  #                                                                                      #
  # -------------------------------------------------------------------------------------#

  include security-headers.conf;

  # ------------------------------------------------------------------------------------ #
  #           Mod PageSpeed                                                              #
  # ------------------------------------------------------------------------------------ #
  # pagespeed conf
  #include pagespeed.conf;

  # bad bots block test
  if ($bad_client) { return 403; }


  location / {
    #naxsi rules
    #include /etc/nginx/site.rules;
    #include /etc/nginx/scanner.rules;
    try_files $uri $uri/ /index.php?$query_string;
  }

  # ------------------------------------------------------------------------------------- #
  #                 Bolt Specific Blocks                                                  #
  # ------------------------------------------------------------------------------------- #
  location ~* /thumbs/(.*)$ {
    try_files $uri $uri/ /index.php?$query_string;
  }

  location ~* /async/(.*)$ {
    try_files $uri $uri/ /index.php?$query_string;
  }

  location /app/classes/upload {
    try_files $uri $uri/ /app/classes/upload/index.php?$query_string;
  }

  # If you set a custom branding path, you will need to change '/bolt/' here to match
  location ~* /bolt/(.*)$ {
    try_files $uri $uri/ /index.php?$query_string;
  }

  # ------------------------------------------------
  # cache css js fonts and svgs for 1 year
  # ------------------------------------------------
  location ~*  \.(?:css|js|gif|svg|ttf|woff)$ {
    access_log off;
    expires 1y;
    # add_header Pragma public;
    add_header Cache-Control "public";
  }

  location ~* \.(?:png|jpe?g|gif|webp|jxr)$ {
    add_header Vary Accept;
    expires 1y;
    add_header Cache-Control "public";
    # Seperate Block because I originally was serving webp to chrome/opera(blink)
    # user agents:
    #try_files $uri$webp_suffix $uri =404;
  }

  location = /robots.txt { access_log off; log_not_found off; }
  location = /favicon.ico { access_log off; log_not_found off; expires 1y; }

  # ------------------------------------------------------------------------#
  #		CACHE SETTINGS	For Fastcgi                                           #
  # ------------------------------------------------------------------------#



  location ~ \.php$ {
    limit_req zone=limit burst=5 nodelay;
    fastcgi_pass php;
    fastcgi_index index.php;
    include fastcgi.conf;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param HTTPS off;
  }

  # Don't allow PHP files to be called from upload, app, theme and extensions directories
  location ~* (?:/files/|/app/|/theme/|/extensions/?)(.*)\.php$ {
    deny all;
  }

  location ~ /\.ht {
    deny all;
  }

  location /app {
    deny all;
  }

  location ~ /vendor {
    deny all;
  }

  location ~ \.db$ {
    deny all;
  }

  # Block access to YAML & Twig files directly
  location ~* /(?:theme|app)/.*.(yml|twig)$ {
    deny all;
  }

  # Block access to Markdown files directly
  location ~ \.md$ {
    deny all;
  }

  # clear headers and those thangssssss
  location ~ \.(?:appcache|atom|crx|css|cur|eot|f4[abpv]|flv|geojson|gif|htc|ico|jpe?g|js|json(ld)?|m4[av]|manifest|map|mp4|oex|og[agv]|opus|otf|pdf|png|rdf|rss|safariextz|svgz?|swf|tt[cf]|txt|vcf|vtt|webapp|web[mp]|woff2?|xml|xpi)$ {
    more_clear_headers 'X-XSS-PROTECTION';
    more_clear_headers 'X-FRAME-OPTIONS';
    more_clear_headers 'Content-Security-Policy';
    more_clear_headers 'X-Content-Security-Policy';
    more_clear_headers 'X-WebKit-CSP';
  }

  # ------------------------------------------------- #
  #						                                        #
  # 	DEMOS TO DEMO REDIRECT because I fucked up      #
  # 			                                            #
  # ------------------------------------------------  #

  location /demos {
    rewrite ^/demos(.*) http://$server_name/demo$1 permanent;
  }

  # using zopfli to send pre compressed static assets
  # gzip off;
  gzip_static on;

  # Include the basic h5bp config set
  include h5bp/basic.conf;
}
